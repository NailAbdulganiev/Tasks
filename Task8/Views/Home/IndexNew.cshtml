@using Task8.Models
@model List<PizzaModel>

<div class="pizza-container">
    @for (int i = 0; i < Model.Count(); i++)
    {
        var pizza = Model[i];
        var firstAvailableSize = pizza.SizeToPrice.Keys.First();

        <div class="pizza-tile" id="pizza_@pizza.Id" data-pizza-id="@pizza.Id">
            <img src="@Url.Content(pizza.ImageUrl)" alt="@pizza.Name"
                 class="pizza-image clickable-image" data-pizza-id="@pizza.Id">
            <h3 class="pizza-title" data-pizza-id="@pizza.Id">@pizza.Name</h3>
            <p class="pizza-description">@pizza.Description</p>

            <div class="size-selector">
                @foreach (var size in new[] { 30, 40, 60 })
                {
                    var isAvailable = pizza.SizeToPrice.ContainsKey(size);

                    <input type="radio" id="size_@pizza.Id@size" name="size_@pizza.Id"
                           value="@size" data-price="@(isAvailable ? pizza.SizeToPrice[size] : 0)"
                           data-weight="@(isAvailable ? pizza.SizeToWeight[size] : 0)"
                    @(isAvailable ? "" : "disabled") @(size == firstAvailableSize ? "checked" : "") />
                    <label for="size_@pizza.Id@size"
                           style="@(!isAvailable ? "color:gray;opacity:0.5;pointer-events:none" : "")">
                        @size см
                    </label>
                }
            </div>

            <div class="dough-selector">
                @foreach (var dough in pizza.DoughTypes)
                {
                    <input type="radio" id="dough_@pizza.Id@dough" name="dough_@pizza.Id"
                           value="@dough" @(dough == pizza.DoughTypes.First() ? "checked" : "")>
                    <label for="dough_@pizza.Id@dough">@dough</label>
                }
            </div>

            <div class="price-weight">
                <span class="price">@pizza.SizeToPrice[firstAvailableSize]₽</span>
                <span class="weight">@pizza.SizeToWeight[firstAvailableSize] гр</span>
            </div>

            <button>В корзину</button>
        </div>
    }
</div>

<div class="modal fade" id="pizzaModal" tabindex="-1" aria-labelledby="pizzaModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="pizzaModalLabel"></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
            </div>
            <div class="modal-body">
                <img id="modalPizzaImage" src="" alt="" class="img-fluid mb-3">
                <p id="modalPizzaDescription"></p>
                <p><strong>Цена:</strong> <span id="modalPizzaPrice"></span></p>
                <p><strong>Вес:</strong> <span id="modalPizzaWeight"></span></p>
                <p><strong>Тесто:</strong> <span id="modalPizzaDough"></span></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Закрыть</button>
            </div>
        </div>
    </div>
</div>

<style>
    .pizza-title {
        text-decoration: none;
        color: inherit;
        display: block;
        text-align: center;
        cursor: pointer;
        transition: all 0.3s ease;
        margin: 10px 0;
    }

        .pizza-title:hover {
            color: #27ae60;
            transform: scale(1.05);
        }
</style>
